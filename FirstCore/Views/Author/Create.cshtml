@model AuthorCreateViewModel
@{
    ViewData["Title"] = "Create";
}

<div class="row orderForm">
    <form asp-controller="Author" asp-action="Create" method="post" class="form-horizontal" role="form">
        @Html.HiddenFor(x => x.BackToAction)
        <h3 class="col-md-offset-2">Create new author</h3>
        <div class="form-group">
            <label asp-for="Author.Name" class="col-md-2 control-label"></label>
            <div class="col-md-6">
                <input asp-for="Author.Name" class="form-control" placeholder="Enter authors name" />
                <span asp-validation-for="Author.Name" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Author.Surname" class="col-md-2 control-label"></label>
            <div class="col-md-6">
                <input asp-for="Author.Surname" class="form-control" placeholder="Enter authors surname" />
                <span asp-validation-for="Author.Surname" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Author.BornDate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author.BornDate, new { @class = "datetimepicker" })
                @Html.ValidationMessageFor(model => model.Author.BornDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="btn-group col-md-offset-2 col-md-6">
                <input class="btn btn-default" type="submit" value="Return" asp-controller="Author" asp-action="List" />
                <input class="btn btn-success" type="submit" value="Create" />
            </div>
        </div>
    </form>
</div>